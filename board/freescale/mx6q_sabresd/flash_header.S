/*
 * Copyright (C) 2012 Freescale Semiconductor, Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 * MA 02111-1307 USA
 */

#include <config.h>
#include <asm/arch/mx6.h>

#ifdef	CONFIG_FLASH_HEADER
#ifndef CONFIG_FLASH_HEADER_OFFSET
# error "Must define the offset of flash header"
#endif

/********************DCD mode***********************/
#define CPU_2_BE_32(l) \
       ((((l) & 0x000000FF) << 24) | \
	(((l) & 0x0000FF00) << 8)  | \
	(((l) & 0x00FF0000) >> 8)  | \
	(((l) & 0xFF000000) >> 24))

#define MXC_DCD_ITEM(i, addr, val)   \
dcd_node_##i:                        \
        .word CPU_2_BE_32(addr) ;     \
        .word CPU_2_BE_32(val)  ;     \

.section ".text.flasheader", "x"
here:	b	_start
	.org	CONFIG_FLASH_HEADER_OFFSET

ivt_header:       .word 0x402000D1 /* Tag=0xD1, Len=0x0020, Ver=0x40 */
app_code_jump_v:  .word _start
reserv1:          .word 0x0
dcd_ptr:          .word dcd_hdr
boot_data_ptr:	  .word boot_data
self_ptr:         .word ivt_header
#ifdef CONFIG_SECURE_BOOT
app_code_csf:     .word __hab_data
#else
app_code_csf:     .word 0x0
#endif
reserv2:          .word 0x0

boot_data:        .word TEXT_BASE
#ifdef CONFIG_SECURE_BOOT
image_len:        .word __hab_data_end - TEXT_BASE + CONFIG_FLASH_HEADER_OFFSET
#else
image_len:        .word _end_of_copy  - TEXT_BASE + CONFIG_FLASH_HEADER_OFFSET
#endif
plugin:           .word 0x0

#if defined CONFIG_MX6DL_DDR3
#if defined CONFIG_DDR_32BIT
dcd_hdr:          .word 0x40E001D2 /* Tag=0xD2, Len=59*8 + 4 + 4, Ver=0x40 */
write_dcd_cmd:    .word 0x04DC01CC /* Tag=0xCC, Len=59*8 + 4, Param=0x04 */

#=============================================================================					
# Base Addresses					
#=============================================================================	

# IOMUXC_BASE_ADDR  = 0x20e0000
# MMDC_P0_BASE_ADDR = 0x021b0000
# MMDC_P1_BASE_ADDR = 0x021b4000

#=============================================================================					
# IOMUX	-- Created using LPDDR2 Script Aid V0.04				
#=============================================================================		
# DDR IO TYPE:	
MXC_DCD_ITEM(1, IOMUXC_BASE_ADDR + 0x774, 0x00080000) 	# IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE 
MXC_DCD_ITEM(2, IOMUXC_BASE_ADDR + 0x754, 0x00000000) 	# IOMUXC_SW_PAD_CTL_GRP_DDRPKE 	
# CLOCK:
MXC_DCD_ITEM(3, IOMUXC_BASE_ADDR + 0x4ac, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0	
MXC_DCD_ITEM(4, IOMUXC_BASE_ADDR + 0x4b0, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_1	
# ADDRESS
MXC_DCD_ITEM(5, IOMUXC_BASE_ADDR + 0x464, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
MXC_DCD_ITEM(6, IOMUXC_BASE_ADDR + 0x490, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
MXC_DCD_ITEM(7, IOMUXC_BASE_ADDR + 0x74c, 0x00000030) 	# IOMUXC_SW_PAD_CTL_GRP_ADDDS 		
# Control
MXC_DCD_ITEM(8, IOMUXC_BASE_ADDR + 0x494, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET		
MXC_DCD_ITEM(9, IOMUXC_BASE_ADDR + 0x4a0, 0x00000000) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group 
# Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS	
MXC_DCD_ITEM(10, IOMUXC_BASE_ADDR + 0x4b4, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
MXC_DCD_ITEM(11, IOMUXC_BASE_ADDR + 0x4b8, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
MXC_DCD_ITEM(12, IOMUXC_BASE_ADDR + 0x76c, 0x00000030) 	# IOMUXC_SW_PAD_CTL_GRP_CTLDS 		
# Data Strobes:	
MXC_DCD_ITEM(13, IOMUXC_BASE_ADDR + 0x750, 0x00020000) 	# IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL 
MXC_DCD_ITEM(14, IOMUXC_BASE_ADDR + 0x4bc, 0x00003030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0 
MXC_DCD_ITEM(15, IOMUXC_BASE_ADDR + 0x4c0, 0x00003030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1 
MXC_DCD_ITEM(16, IOMUXC_BASE_ADDR + 0x4c4, 0x00003030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2 
MXC_DCD_ITEM(17, IOMUXC_BASE_ADDR + 0x4c8, 0x00003030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3 
# Data
MXC_DCD_ITEM(18, IOMUXC_BASE_ADDR + 0x760, 0x00020000) 	# IOMUXC_SW_PAD_CTL_GRP_DDRMODE	
MXC_DCD_ITEM(19, IOMUXC_BASE_ADDR + 0x764, 0x00000030) 	# IOMUXC_SW_PAD_CTL_GRP_B0DS 		
MXC_DCD_ITEM(20, IOMUXC_BASE_ADDR + 0x770, 0x00000030) 	# IOMUXC_SW_PAD_CTL_GRP_B1DS 		
MXC_DCD_ITEM(21, IOMUXC_BASE_ADDR + 0x778, 0x00000030) 	# IOMUXC_SW_PAD_CTL_GRP_B2DS 		
MXC_DCD_ITEM(22, IOMUXC_BASE_ADDR + 0x77c, 0x00000030) 	# IOMUXC_SW_PAD_CTL_GRP_B3DS 		

MXC_DCD_ITEM(23, IOMUXC_BASE_ADDR + 0x470, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0	
MXC_DCD_ITEM(24, IOMUXC_BASE_ADDR + 0x474, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1	
MXC_DCD_ITEM(25, IOMUXC_BASE_ADDR + 0x478, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2	
MXC_DCD_ITEM(26, IOMUXC_BASE_ADDR + 0x47c, 0x00000030) 	# IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3	

## DEBUG_LEDS #################################################################

MXC_DCD_ITEM(27, IOMUXC_BASE_ADDR + 0x234, 0x5)			# DEBUG_LED1
MXC_DCD_ITEM(28, IOMUXC_BASE_ADDR + 0x604, 0x130B0)
MXC_DCD_ITEM(29, IOMUXC_BASE_ADDR + 0x238, 0x5)			# DEBUG_LED2
MXC_DCD_ITEM(30, IOMUXC_BASE_ADDR + 0x608, 0x130B0)
MXC_DCD_ITEM(31, IOMUXC_BASE_ADDR + 0x23C, 0x5)			# DEBUG_LED3
MXC_DCD_ITEM(32, IOMUXC_BASE_ADDR + 0x60C, 0x130B0)
MXC_DCD_ITEM(33, IOMUXC_BASE_ADDR + 0x218, 0x5)			# DEBUG_LED4
MXC_DCD_ITEM(34, IOMUXC_BASE_ADDR + 0x5E8, 0x130B0)
MXC_DCD_ITEM(35, IOMUXC_BASE_ADDR + 0x21C, 0x5)			# DEBUG_LED5
MXC_DCD_ITEM(36, IOMUXC_BASE_ADDR + 0x5EC, 0x130B0)

###############################################################################

#=============================================================================					
# DDR Controller Registers -- Created using LPDDR2 Script Aid V0.04					
#=============================================================================	
# Manufacturer         :	Micron				
# Device Part Number   :	MT42L128M32D1LF-25				
# Clock Freq           : 	400MHz				
# MMDC channels        : 	MMDC0				
# Density per CS in Gb : 	4				
# Chip Selects used    :	1				
# Number of Banks      :	8				
# Row address          :    	14				
# Column address       : 	10				
# Data bus width       :	32				
#=============================================================================		

MXC_DCD_ITEM(37, MMDC_P0_BASE_ADDR + 0x01C, 0x00008000) # MMDC0_MDSCR, set the Configuration request bit during MMDC set up
MXC_DCD_ITEM(38, MMDC_P0_BASE_ADDR + 0x85C, 0x1B4700C7) # MMDC0_MPZQLP2CTL,LPDDR2 ZQ params

#=============================================================================					
# Calibration setup.					
#=============================================================================	

MXC_DCD_ITEM(39, MMDC_P0_BASE_ADDR + 0x800, 0xA1390003)	# DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.		
# ca bus abs delay					
MXC_DCD_ITEM(40, MMDC_P0_BASE_ADDR + 0x890, 0x00400000)	# values of 20,40,50,60,7f tried. no difference seen	Original Values (Delete Later)	Difference?
# Read calibration					
MXC_DCD_ITEM(41, MMDC_P0_BASE_ADDR + 0x848, 0x40404040)	# MPRDDLCTL PHY0		
# Write calibration                     					
MXC_DCD_ITEM(42, MMDC_P0_BASE_ADDR + 0x850, 0x40404040)	# MPWRDLCTL PHY0		
# dqs gating dis					
MXC_DCD_ITEM(43, MMDC_P0_BASE_ADDR + 0x83c, 0x20000000)	#
MXC_DCD_ITEM(44, MMDC_P0_BASE_ADDR + 0x840, 0x00000000)	#
# read data bit delay: (3 is the reccommended default value, although out of reset value is 0)					
MXC_DCD_ITEM(45, MMDC_P0_BASE_ADDR + 0x81c, 0x33333333)	# DDR_PHY_P0_MPREDQBY0DL3	Original Values (Delete Later)	Difference?
MXC_DCD_ITEM(46, MMDC_P0_BASE_ADDR + 0x820, 0x33333333)	# DDR_PHY_P0_MPREDQBY1DL3	0x00009c40	0x33333333
MXC_DCD_ITEM(47, MMDC_P0_BASE_ADDR + 0x824, 0x33333333)	# DDR_PHY_P0_MPREDQBY2DL3	0x00000000	0x33333333
MXC_DCD_ITEM(48, MMDC_P0_BASE_ADDR + 0x828, 0x33333333)	# DDR_PHY_P0_MPREDQBY3DL3	0x00000000	0x33333333
# write data bit delay: (3 is the reccommended default value, although out of reset value is 0)					
MXC_DCD_ITEM(49, MMDC_P0_BASE_ADDR + 0x82c, 0xF3333333)	# DDR_PHY_P0_MPREDQBY0DL3	Original Values (Delete Later)	Difference?
MXC_DCD_ITEM(50, MMDC_P0_BASE_ADDR + 0x830, 0xF3333333)	# DDR_PHY_P0_MPREDQBY1DL3	0x00009c40	0xF3333333
MXC_DCD_ITEM(51, MMDC_P0_BASE_ADDR + 0x834, 0xF3333333)	# DDR_PHY_P0_MPREDQBY2DL3	0x00000000	0xF3333333
MXC_DCD_ITEM(52, MMDC_P0_BASE_ADDR + 0x838, 0xF3333333)	# DDR_PHY_P0_MPREDQBY3DL3	0x00000000	0xF3333333
# Complete calibration by forced measurement:                  					
MXC_DCD_ITEM(53, MMDC_P0_BASE_ADDR + 0x8b8, 0x00000800)	# DDR_PHY_P0_MPMUR0, frc_msr		
#=============================================================================					
# Calibration setup end					
#=============================================================================		

#  Channel0 - startng address 0x80000000					
MXC_DCD_ITEM(54, MMDC_P0_BASE_ADDR + 0x004,	0x00020036)	#  MMDC0_MDPDC		
MXC_DCD_ITEM(55, MMDC_P0_BASE_ADDR + 0x008,	0x00000000)	#  MMDC0_MDOTC		
MXC_DCD_ITEM(56, MMDC_P0_BASE_ADDR + 0x00c,	0x33374135)	#  MMDC0_MDCFG0		
MXC_DCD_ITEM(57, MMDC_P0_BASE_ADDR + 0x010,	0x00100A83)	#  MMDC0_MDCFG1		
MXC_DCD_ITEM(58, MMDC_P0_BASE_ADDR + 0x014,	0x00000093)	#  MMDC0_MDCFG2		
					
# MDMISC: RALAT kept to the high level of 5. 					
# MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits: 					
# a. better operation at low frequency, for LPDDR2 freq < 100MHz, change RALAT to 3					
# b. Small performence improvment 					
MXC_DCD_ITEM(59, MMDC_P0_BASE_ADDR + 0x018,	0x00001748)	#  MMDC0_MDMISC	0x015dc002	0x00001748
MXC_DCD_ITEM(60, MMDC_P0_BASE_ADDR + 0x01c,	0x00008000)	#  MMDC0_MDSCR, set the Configuration request bit during MMDC set up		
MXC_DCD_ITEM(61, MMDC_P0_BASE_ADDR + 0x02c,	0x0F9F26D2)	#  MMDC0_MDRWD		
MXC_DCD_ITEM(62, MMDC_P0_BASE_ADDR + 0x030,	0x00000010)	#  MMDC0_MDOR		
MXC_DCD_ITEM(63, MMDC_P0_BASE_ADDR + 0x038,	0x00190778)	#  MMDC0_MDCFG3LP		
MXC_DCD_ITEM(64, MMDC_P0_BASE_ADDR + 0x040,	0x00000017)	#  Chan0 CS0_END 		
MXC_DCD_ITEM(65, MMDC_P0_BASE_ADDR + 0x400,	0x11420000)	#  MMDC0_MAARCR ADOPT optimized priorities. Dyn jump disabled		
MXC_DCD_ITEM(66, MMDC_P0_BASE_ADDR + 0x000,	0x83110000)	#  MMDC0_MDCTL		
					
#  Channel1 - starting address 0x10000000					
					
# MDMISC: RALAT kept to the high level of 5. 					
# MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits: 					
# a. better operation at low frequency, for LPDDR2 freq < 100MHz, change RALAT to 3					
# b. Small performence improvment 					
					
#  Channel0 : Configure DDR device:      					
# CS0					
MXC_DCD_ITEM(67, MMDC_P0_BASE_ADDR + 0x01c,	0x003F8030)	#  MRW: BA=0 CS=0 MR_ADDR=63 MR_OP=0		
MXC_DCD_ITEM(68, MMDC_P0_BASE_ADDR + 0x01c,	0xFF0A8030)	#  MRW: BA=0 CS=0 MR_ADDR=10 MR_OP=ff		
MXC_DCD_ITEM(69, MMDC_P0_BASE_ADDR + 0x01c,	0x82018030)	#  MRW: BA=0 CS=0 MR_ADDR=1  MR_OP=c2		
MXC_DCD_ITEM(70, MMDC_P0_BASE_ADDR + 0x01c,	0x06028030)	#  MRW: BA=0 CS=0 MR_ADDR=2  MR_OP=6. tcl=8, tcwl=4		
MXC_DCD_ITEM(71, MMDC_P0_BASE_ADDR + 0x01c,	0x02038030)	#  MRW: BA=0 CS=0 MR_ADDR=3  MR_OP=2.drive=240/6		
					
#  Channel1 : Configure DDR device:
MXC_DCD_ITEM(72, MMDC_P0_BASE_ADDR + 0x800,	0xA1390003)	#  DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.		
MXC_DCD_ITEM(73, MMDC_P0_BASE_ADDR + 0x020,	0x00001800)	#  MMDC0_MDREF		
MXC_DCD_ITEM(74, MMDC_P0_BASE_ADDR + 0x818,	0x00000000)	#  DDR_PHY_P0_MPODTCTRL		
MXC_DCD_ITEM(75, MMDC_P0_BASE_ADDR + 0x004,	0x00025576)	#  MMDC0_MDPDC now SDCTL power down enabled		
MXC_DCD_ITEM(76, MMDC_P0_BASE_ADDR + 0x404,	0x00011006)	#  MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.		
MXC_DCD_ITEM(77, MMDC_P0_BASE_ADDR + 0x01c,	0x00000000)	#  MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)	0x01000202	0x00000000




## MMDC PHY Write Leveling Delay Ctl reg 0 & 1 - MMDC1_MPWLDECTRL0, 1 
#MXC_DCD_ITEM(28, MMDC_P0_BASE_ADDR + 0x80c, 0x001F001F)
#MXC_DCD_ITEM(29, MMDC_P0_BASE_ADDR + 0x810, 0x001F001F)
## MMDC PHY Read DQS Gating Ctl Reg 0, 1 - MMDC1_MPZQHWCTRL
#MXC_DCD_ITEM(30, MMDC_P0_BASE_ADDR + 0x83c, 0x42190219)
#MXC_DCD_ITEM(31, MMDC_P0_BASE_ADDR + 0x840, 0x017B0177)

## MMDC PHY Measure Unit Reg
#MXC_DCD_ITEM(38, MMDC_P0_BASE_ADDR + 0x8b8, 0x00000800)
## MMDC Core Power Down, ODT Timing, Timing Config 0, 
## Timing Config 1, Timing Config 2, Misc Regs
#MXC_DCD_ITEM(39, MMDC_P0_BASE_ADDR + 0x004, 0x0002002D)
#MXC_DCD_ITEM(40, MMDC_P0_BASE_ADDR + 0x008, 0x00333030)
#MXC_DCD_ITEM(41, MMDC_P0_BASE_ADDR + 0x00c, 0x3F435313)
#MXC_DCD_ITEM(42, MMDC_P0_BASE_ADDR + 0x010, 0xB66E8B63)
#MXC_DCD_ITEM(43, MMDC_P0_BASE_ADDR + 0x014, 0x01FF00DB)
#MXC_DCD_ITEM(44, MMDC_P0_BASE_ADDR + 0x018, 0x00001740)
## MMDC Core Special Command Reg, Delay Reg
#MXC_DCD_ITEM(45, MMDC_P0_BASE_ADDR + 0x01c, 0x00008000)
#MXC_DCD_ITEM(46, MMDC_P0_BASE_ADDR + 0x02c, 0x000026d2)
## MMDC Core out of Reset delays, Core address space partition
#MXC_DCD_ITEM(47, MMDC_P0_BASE_ADDR + 0x030, 0x00431023)
#MXC_DCD_ITEM(48, MMDC_P0_BASE_ADDR + 0x040, 0x00000017)
## MMDC Core Control Reg
#MXC_DCD_ITEM(49, MMDC_P0_BASE_ADDR + 0x000, 0x83190000)
## MMDC Core Special Command Reg
#MXC_DCD_ITEM(50, MMDC_P0_BASE_ADDR + 0x01c, 0x04008032)
#MXC_DCD_ITEM(51, MMDC_P0_BASE_ADDR + 0x01c, 0x00008033)
#MXC_DCD_ITEM(52, MMDC_P0_BASE_ADDR + 0x01c, 0x00048031)
#MXC_DCD_ITEM(53, MMDC_P0_BASE_ADDR + 0x01c, 0x05208030)
#MXC_DCD_ITEM(54, MMDC_P0_BASE_ADDR + 0x01c, 0x04008040)
## MMDC Code Refresh Control Reg, PHY ODT Ctrl Reg
#MXC_DCD_ITEM(55, MMDC_P0_BASE_ADDR + 0x020, 0x00005800)
#MXC_DCD_ITEM(56, MMDC_P0_BASE_ADDR + 0x818, 0x00011117)
## MMDC Core Power Down Ctrl Reg, Power Saving Ctrl & Status Reg
#MXC_DCD_ITEM(57, MMDC_P0_BASE_ADDR + 0x004, 0x0002556d)
#MXC_DCD_ITEM(58, MMDC_P0_BASE_ADDR + 0x404, 0x00011006)
## MMDC Core Special Command Reg
#MXC_DCD_ITEM(59, MMDC_P0_BASE_ADDR + 0x01c, 0x00000000)












#else /* i.MX6DL 64BIT-DDR */
dcd_hdr:          .word 0x415800D2 /* Tag=0xD2, Len=59*8 + 4 + 4, Ver=0x40 */
write_dcd_cmd:    .word 0x045400CC /* Tag=0xCC, Len=59*8 + 4, Param=0x04 */


# IOMUXC_BASE_ADDR  = 0x20e0000
# MMDC_P0_BASE_ADDR = 0x021b0000
# MMDC_P1_BASE_ADDR = 0x021b4000

# SDCLK0,1
#MXC_DCD_ITEM(3, IOMUXC_BASE_ADDR + 0x4ac, 0x0BADBEEF)
#MXC_DCD_ITEM(4, IOMUXC_BASE_ADDR + 0x4b0, 0xDAC0FFEE)

# DDR IO TYPE, DDRPKE
#MXC_DCD_ITEM(1, IOMUXC_BASE_ADDR + 0x774, 0x000c0000)
#MXC_DCD_ITEM(2, IOMUXC_BASE_ADDR + 0x754, 0x00000000)
# Clock - SDCLK0,1
#MXC_DCD_ITEM(3, IOMUXC_BASE_ADDR + 0x4ac, 0x00000030)
#MXC_DCD_ITEM(4, IOMUXC_BASE_ADDR + 0x4b0, 0x00000030)
# Address - CAS_B, RAS_B, GRP_ADDDS
#MXC_DCD_ITEM(5, IOMUXC_BASE_ADDR + 0x464, 0x00000030)
#MXC_DCD_ITEM(6, IOMUXC_BASE_ADDR + 0x490, 0x00000030)
#MXC_DCD_ITEM(7, IOMUXC_BASE_ADDR + 0x74c, 0x00000030)
## Control - DRAM_RESET
#MXC_DCD_ITEM(8, IOMUXC_BASE_ADDR + 0x494, 0x00000030)
# DRAM_SDBA2
#MXC_DCD_ITEM(9, IOMUXC_BASE_ADDR + 0x4a0, 0x00000000)

# DRAM_ODT0, ODT1, GRP_CTLDS
#MXC_DCD_ITEM(10, IOMUXC_BASE_ADDR + 0x4b4, 0x00000030)
MXC_DCD_ITEM(11, IOMUXC_BASE_ADDR + 0x4b8, 0x00000030)
MXC_DCD_ITEM(12, IOMUXC_BASE_ADDR + 0x76c, 0x00000030)

# Data Strobe - GRP_DDRMODE_CTL
MXC_DCD_ITEM(13, IOMUXC_BASE_ADDR + 0x750, 0x00020000)
# SDQS0-7
MXC_DCD_ITEM(14, IOMUXC_BASE_ADDR + 0x4bc, 0x00000030)
MXC_DCD_ITEM(15, IOMUXC_BASE_ADDR + 0x4c0, 0x00000030)
MXC_DCD_ITEM(16, IOMUXC_BASE_ADDR + 0x4c4, 0x00000030)
MXC_DCD_ITEM(17, IOMUXC_BASE_ADDR + 0x4c8, 0x00000030)
MXC_DCD_ITEM(18, IOMUXC_BASE_ADDR + 0x4cc, 0x00000030)
MXC_DCD_ITEM(19, IOMUXC_BASE_ADDR + 0x4d0, 0x00000030)
MXC_DCD_ITEM(20, IOMUXC_BASE_ADDR + 0x4d4, 0x00000030)
MXC_DCD_ITEM(21, IOMUXC_BASE_ADDR + 0x4d8, 0x00000030)

# GRP_DDRMODE
MXC_DCD_ITEM(22, IOMUXC_BASE_ADDR + 0x760, 0x00020000)

# GRP_B0DS-B7DS
MXC_DCD_ITEM(23, IOMUXC_BASE_ADDR + 0x764, 0x00000030)
MXC_DCD_ITEM(24, IOMUXC_BASE_ADDR + 0x770, 0x00000030)
MXC_DCD_ITEM(25, IOMUXC_BASE_ADDR + 0x778, 0x00000030)
MXC_DCD_ITEM(26, IOMUXC_BASE_ADDR + 0x77c, 0x00000030)
MXC_DCD_ITEM(27, IOMUXC_BASE_ADDR + 0x780, 0x00000030)
MXC_DCD_ITEM(28, IOMUXC_BASE_ADDR + 0x784, 0x00000030)
MXC_DCD_ITEM(29, IOMUXC_BASE_ADDR + 0x78c, 0x00000030)
MXC_DCD_ITEM(30, IOMUXC_BASE_ADDR + 0x748, 0x00000030)

# DRAM_DQM0-DQM7
MXC_DCD_ITEM(31, IOMUXC_BASE_ADDR + 0x470, 0x00000030)
MXC_DCD_ITEM(32, IOMUXC_BASE_ADDR + 0x474, 0x00000030)
MXC_DCD_ITEM(33, IOMUXC_BASE_ADDR + 0x478, 0x00000030)
MXC_DCD_ITEM(34, IOMUXC_BASE_ADDR + 0x47c, 0x00000030)
MXC_DCD_ITEM(35, IOMUXC_BASE_ADDR + 0x480, 0x00000030)
MXC_DCD_ITEM(36, IOMUXC_BASE_ADDR + 0x484, 0x00000030)
MXC_DCD_ITEM(37, IOMUXC_BASE_ADDR + 0x488, 0x00000030)
MXC_DCD_ITEM(38, IOMUXC_BASE_ADDR + 0x48c, 0x00000030)

# MMDC Calibrations ###########################################################
# ZQ HW Control Reg. WHY NOT FOR MMDC_P1??
MXC_DCD_ITEM(39, MMDC_P0_BASE_ADDR + 0x800, 0xa1390003)

# write leveling delay
MXC_DCD_ITEM(40, MMDC_P0_BASE_ADDR + 0x80c, 0x001F001F)
MXC_DCD_ITEM(41, MMDC_P0_BASE_ADDR + 0x810, 0x001F001F)
MXC_DCD_ITEM(43, MMDC_P1_BASE_ADDR + 0x810, 0x001F001F) 
MXC_DCD_ITEM(42, MMDC_P1_BASE_ADDR + 0x80c, 0x001F001F)

# DQS gating, read delay, write delay calibration values
# based on calibration compare of 0x00ffff00
MXC_DCD_ITEM(44, MMDC_P0_BASE_ADDR + 0x83c, 0x42480248)
MXC_DCD_ITEM(45, MMDC_P0_BASE_ADDR + 0x840, 0x0211020B)
MXC_DCD_ITEM(46, MMDC_P1_BASE_ADDR + 0x83C, 0x417F0211)
MXC_DCD_ITEM(47, MMDC_P1_BASE_ADDR + 0x840, 0x015D0166)

MXC_DCD_ITEM(48, MMDC_P0_BASE_ADDR + 0x848, 0x4B4C504D)
MXC_DCD_ITEM(49, MMDC_P1_BASE_ADDR + 0x848, 0x494C4F48)

MXC_DCD_ITEM(50, MMDC_P0_BASE_ADDR + 0x850, 0x3F3F2E31)
MXC_DCD_ITEM(51, MMDC_P1_BASE_ADDR + 0x850, 0x2B35382B)

# Read DQ Byte0-3 Delay Reg
MXC_DCD_ITEM(52, MMDC_P0_BASE_ADDR + 0x81c, 0x33333333)
MXC_DCD_ITEM(53, MMDC_P0_BASE_ADDR + 0x820, 0x33333333)
MXC_DCD_ITEM(54, MMDC_P0_BASE_ADDR + 0x824, 0x33333333)
MXC_DCD_ITEM(55, MMDC_P0_BASE_ADDR + 0x828, 0x33333333)
MXC_DCD_ITEM(56, MMDC_P1_BASE_ADDR + 0x81c, 0x33333333)
MXC_DCD_ITEM(57, MMDC_P1_BASE_ADDR + 0x820, 0x33333333)
MXC_DCD_ITEM(58, MMDC_P1_BASE_ADDR + 0x824, 0x33333333)
MXC_DCD_ITEM(59, MMDC_P1_BASE_ADDR + 0x828, 0x33333333)

# Measure Unit Regiister
MXC_DCD_ITEM(60, MMDC_P0_BASE_ADDR + 0x8b8, 0x00000800)
MXC_DCD_ITEM(61, MMDC_P1_BASE_ADDR + 0x8b8, 0x00000800)

###############################################################################

# MMDC init:
# in DDR3, 64-bit mode, only MMDC0 is initiated:
MXC_DCD_ITEM(62, MMDC_P0_BASE_ADDR + 0x004, 0x0002002D)
MXC_DCD_ITEM(63, MMDC_P0_BASE_ADDR + 0x008, 0x00333030)
MXC_DCD_ITEM(64, MMDC_P0_BASE_ADDR + 0x00c, 0x3F435313)
MXC_DCD_ITEM(65, MMDC_P0_BASE_ADDR + 0x010, 0xB66E8B63)
MXC_DCD_ITEM(66, MMDC_P0_BASE_ADDR + 0x014, 0x01FF00DB)
MXC_DCD_ITEM(67, MMDC_P0_BASE_ADDR + 0x018, 0x00081740)

MXC_DCD_ITEM(68, MMDC_P0_BASE_ADDR + 0x01c, 0x00008000)
MXC_DCD_ITEM(69, MMDC_P0_BASE_ADDR + 0x02c, 0x000026d2)
MXC_DCD_ITEM(70, MMDC_P0_BASE_ADDR + 0x030, 0x00431023)
MXC_DCD_ITEM(71, MMDC_P0_BASE_ADDR + 0x040, 0x00000027)

MXC_DCD_ITEM(72, MMDC_P0_BASE_ADDR + 0x000, 0x831A0000)

# Initialize 2GB DDR3 - Micron MT41J128M
MXC_DCD_ITEM(73, MMDC_P0_BASE_ADDR + 0x01c, 0x04008032)
MXC_DCD_ITEM(74, MMDC_P0_BASE_ADDR + 0x01c, 0x00008033)
MXC_DCD_ITEM(75, MMDC_P0_BASE_ADDR + 0x01c, 0x00048031)
MXC_DCD_ITEM(76, MMDC_P0_BASE_ADDR + 0x01c, 0x05208030)
MXC_DCD_ITEM(77, MMDC_P0_BASE_ADDR + 0x01c, 0x04008040)

MXC_DCD_ITEM(78, MMDC_P0_BASE_ADDR + 0x020, 0x00005800)

MXC_DCD_ITEM(79, MMDC_P0_BASE_ADDR + 0x818, 0x00011117)
MXC_DCD_ITEM(80, MMDC_P1_BASE_ADDR + 0x818, 0x00011117)

MXC_DCD_ITEM(81, MMDC_P0_BASE_ADDR + 0x004, 0x0002556d)
MXC_DCD_ITEM(82, MMDC_P1_BASE_ADDR + 0x404, 0x00011006)
MXC_DCD_ITEM(83, MMDC_P0_BASE_ADDR + 0x01c, 0x00000000)

#endif
#else  /* i.MX6Q */
dcd_hdr:          .word 0x40a002D2 /* Tag=0xD2, Len=83*8 + 4 + 4, Ver=0x40 */
write_dcd_cmd:    .word 0x049c02CC /* Tag=0xCC, Len=83*8 + 4, Param=0x04 */

/* DCD */


MXC_DCD_ITEM(1, IOMUXC_BASE_ADDR + 0x798, 0x000C0000)
MXC_DCD_ITEM(2, IOMUXC_BASE_ADDR + 0x758, 0x00000000)

MXC_DCD_ITEM(3, IOMUXC_BASE_ADDR + 0x588, 0x00000030)
MXC_DCD_ITEM(4, IOMUXC_BASE_ADDR + 0x594, 0x00000030)

MXC_DCD_ITEM(5, IOMUXC_BASE_ADDR + 0x56c, 0x00000030)
MXC_DCD_ITEM(6, IOMUXC_BASE_ADDR + 0x578, 0x00000030)
MXC_DCD_ITEM(7, IOMUXC_BASE_ADDR + 0x74c, 0x00000030)

MXC_DCD_ITEM(8, IOMUXC_BASE_ADDR + 0x57c, 0x00000030)

MXC_DCD_ITEM(9, IOMUXC_BASE_ADDR + 0x58c, 0x00000000)
MXC_DCD_ITEM(10, IOMUXC_BASE_ADDR + 0x59c, 0x00000030)
MXC_DCD_ITEM(11, IOMUXC_BASE_ADDR + 0x5a0, 0x00000030)
MXC_DCD_ITEM(12, IOMUXC_BASE_ADDR + 0x78c, 0x00000030)

MXC_DCD_ITEM(13, IOMUXC_BASE_ADDR + 0x750, 0x00020000)

MXC_DCD_ITEM(14, IOMUXC_BASE_ADDR + 0x5a8, 0x00000030)
MXC_DCD_ITEM(15, IOMUXC_BASE_ADDR + 0x5b0, 0x00000030)
MXC_DCD_ITEM(16, IOMUXC_BASE_ADDR + 0x524, 0x00000030)
MXC_DCD_ITEM(17, IOMUXC_BASE_ADDR + 0x51c, 0x00000030)
MXC_DCD_ITEM(18, IOMUXC_BASE_ADDR + 0x518, 0x00000030)
MXC_DCD_ITEM(19, IOMUXC_BASE_ADDR + 0x50c, 0x00000030)
MXC_DCD_ITEM(20, IOMUXC_BASE_ADDR + 0x5b8, 0x00000030)
MXC_DCD_ITEM(21, IOMUXC_BASE_ADDR + 0x5c0, 0x00000030)

MXC_DCD_ITEM(22, IOMUXC_BASE_ADDR + 0x774, 0x00020000)

MXC_DCD_ITEM(23, IOMUXC_BASE_ADDR + 0x784, 0x00000030)
MXC_DCD_ITEM(24, IOMUXC_BASE_ADDR + 0x788, 0x00000030)
MXC_DCD_ITEM(25, IOMUXC_BASE_ADDR + 0x794, 0x00000030)
MXC_DCD_ITEM(26, IOMUXC_BASE_ADDR + 0x79c, 0x00000030)
MXC_DCD_ITEM(27, IOMUXC_BASE_ADDR + 0x7a0, 0x00000030)
MXC_DCD_ITEM(28, IOMUXC_BASE_ADDR + 0x7a4, 0x00000030)
MXC_DCD_ITEM(29, IOMUXC_BASE_ADDR + 0x7a8, 0x00000030)
MXC_DCD_ITEM(30, IOMUXC_BASE_ADDR + 0x748, 0x00000030)

MXC_DCD_ITEM(31, IOMUXC_BASE_ADDR + 0x5ac, 0x00000030)
MXC_DCD_ITEM(32, IOMUXC_BASE_ADDR + 0x5b4, 0x00000030)
MXC_DCD_ITEM(33, IOMUXC_BASE_ADDR + 0x528, 0x00000030)
MXC_DCD_ITEM(34, IOMUXC_BASE_ADDR + 0x520, 0x00000030)
MXC_DCD_ITEM(35, IOMUXC_BASE_ADDR + 0x514, 0x00000030)
MXC_DCD_ITEM(36, IOMUXC_BASE_ADDR + 0x510, 0x00000030)
MXC_DCD_ITEM(37, IOMUXC_BASE_ADDR + 0x5bc, 0x00000030)
MXC_DCD_ITEM(38, IOMUXC_BASE_ADDR + 0x5c4, 0x00000030)

MXC_DCD_ITEM(39, MMDC_P0_BASE_ADDR + 0x800, 0xA1390003)

MXC_DCD_ITEM(40, MMDC_P0_BASE_ADDR + 0x80c, 0x001F001F)
MXC_DCD_ITEM(41, MMDC_P0_BASE_ADDR + 0x810, 0x001F001F)
MXC_DCD_ITEM(42, MMDC_P1_BASE_ADDR + 0x80c, 0x001F001F)
MXC_DCD_ITEM(43, MMDC_P1_BASE_ADDR + 0x810, 0x001F001F)

MXC_DCD_ITEM(44, MMDC_P0_BASE_ADDR + 0x83c, 0x4333033F)
MXC_DCD_ITEM(45, MMDC_P0_BASE_ADDR + 0x840, 0x032C031D)
MXC_DCD_ITEM(46, MMDC_P1_BASE_ADDR + 0x83c, 0x43200332)
MXC_DCD_ITEM(47, MMDC_P1_BASE_ADDR + 0x840, 0x031A026A)
MXC_DCD_ITEM(48, MMDC_P0_BASE_ADDR + 0x848, 0x4D464746)
MXC_DCD_ITEM(49, MMDC_P1_BASE_ADDR + 0x848, 0x47453F4D)
MXC_DCD_ITEM(50, MMDC_P0_BASE_ADDR + 0x850, 0x3E434440)
MXC_DCD_ITEM(51, MMDC_P1_BASE_ADDR + 0x850, 0x47384839)

MXC_DCD_ITEM(52, MMDC_P0_BASE_ADDR + 0x81c, 0x33333333)
MXC_DCD_ITEM(53, MMDC_P0_BASE_ADDR + 0x820, 0x33333333)
MXC_DCD_ITEM(54, MMDC_P0_BASE_ADDR + 0x824, 0x33333333)
MXC_DCD_ITEM(55, MMDC_P0_BASE_ADDR + 0x828, 0x33333333)
MXC_DCD_ITEM(56, MMDC_P1_BASE_ADDR + 0x81c, 0x33333333)
MXC_DCD_ITEM(57, MMDC_P1_BASE_ADDR + 0x820, 0x33333333)
MXC_DCD_ITEM(58, MMDC_P1_BASE_ADDR + 0x824, 0x33333333)
MXC_DCD_ITEM(59, MMDC_P1_BASE_ADDR + 0x828, 0x33333333)

MXC_DCD_ITEM(60, MMDC_P0_BASE_ADDR + 0x8b8, 0x00000800)
MXC_DCD_ITEM(61, MMDC_P1_BASE_ADDR + 0x8b8, 0x00000800)

MXC_DCD_ITEM(62, MMDC_P0_BASE_ADDR + 0x004, 0x00020036)
MXC_DCD_ITEM(63, MMDC_P0_BASE_ADDR + 0x008, 0x09444040)
MXC_DCD_ITEM(64, MMDC_P0_BASE_ADDR + 0x00c, 0x555A7975)
MXC_DCD_ITEM(65, MMDC_P0_BASE_ADDR + 0x010, 0xFF538F64)
MXC_DCD_ITEM(66, MMDC_P0_BASE_ADDR + 0x014, 0x01FF00DB)
MXC_DCD_ITEM(67, MMDC_P0_BASE_ADDR + 0x018, 0x00001740)

MXC_DCD_ITEM(68, MMDC_P0_BASE_ADDR + 0x01c, 0x00008000)
MXC_DCD_ITEM(69, MMDC_P0_BASE_ADDR + 0x02c, 0x000026D2)
MXC_DCD_ITEM(70, MMDC_P0_BASE_ADDR + 0x030, 0x005A1023)
MXC_DCD_ITEM(71, MMDC_P0_BASE_ADDR + 0x040, 0x00000027)

MXC_DCD_ITEM(72, MMDC_P0_BASE_ADDR + 0x000, 0x831A0000)

MXC_DCD_ITEM(73, MMDC_P0_BASE_ADDR + 0x01c, 0x04088032)
MXC_DCD_ITEM(74, MMDC_P0_BASE_ADDR + 0x01c, 0x00008033)
MXC_DCD_ITEM(75, MMDC_P0_BASE_ADDR + 0x01c, 0x00048031)
MXC_DCD_ITEM(76, MMDC_P0_BASE_ADDR + 0x01c, 0x09408030)
MXC_DCD_ITEM(77, MMDC_P0_BASE_ADDR + 0x01c, 0x04008040)

MXC_DCD_ITEM(78, MMDC_P0_BASE_ADDR + 0x020, 0x00005800)

MXC_DCD_ITEM(79, MMDC_P0_BASE_ADDR + 0x818, 0x00011117)
MXC_DCD_ITEM(80, MMDC_P1_BASE_ADDR + 0x818, 0x00011117)

MXC_DCD_ITEM(81, MMDC_P0_BASE_ADDR + 0x004, 0x00025576)
MXC_DCD_ITEM(82, MMDC_P0_BASE_ADDR + 0x404, 0x00011006)
MXC_DCD_ITEM(83, MMDC_P0_BASE_ADDR + 0x01c, 0x00000000)

#endif

#endif
